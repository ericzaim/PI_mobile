{"ast":null,"code":"\"use strict\";var _asyncToGenerator=require(\"@babel/runtime/helpers/asyncToGenerator\");var _defineProperty=require(\"@babel/runtime/helpers/defineProperty\");var _slicedToArray=require(\"@babel/runtime/helpers/slicedToArray\");function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter(function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable;})),t.push.apply(t,o);}return t;}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach(function(r){_defineProperty(e,r,t[r]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach(function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r));});}return e;}var __createBinding=this&&this.__createBinding||(Object.create?function(o,m,k,k2){if(k2===undefined)k2=k;var desc=Object.getOwnPropertyDescriptor(m,k);if(!desc||(\"get\"in desc?!m.__esModule:desc.writable||desc.configurable)){desc={enumerable:true,get:function get(){return m[k];}};}Object.defineProperty(o,k2,desc);}:function(o,m,k,k2){if(k2===undefined)k2=k;o[k2]=m[k];});var __setModuleDefault=this&&this.__setModuleDefault||(Object.create?function(o,v){Object.defineProperty(o,\"default\",{enumerable:true,value:v});}:function(o,v){o[\"default\"]=v;});var __importStar=this&&this.__importStar||function(){var _ownKeys=function ownKeys(o){_ownKeys=Object.getOwnPropertyNames||function(o){var ar=[];for(var k in o)if(Object.prototype.hasOwnProperty.call(o,k))ar[ar.length]=k;return ar;};return _ownKeys(o);};return function(mod){if(mod&&mod.__esModule)return mod;var result={};if(mod!=null)for(var k=_ownKeys(mod),i=0;i<k.length;i++)if(k[i]!==\"default\")__createBinding(result,mod,k[i]);__setModuleDefault(result,mod);return result;};}();var __importDefault=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{\"default\":mod};};Object.defineProperty(exports,\"__esModule\",{value:true});exports.series=void 0;exports.useLinking=useLinking;exports.getInitialURLWithTimeout=getInitialURLWithTimeout;var native_1=require(\"@react-navigation/native\");var fast_deep_equal_1=__importDefault(require(\"fast-deep-equal\"));var React=__importStar(require(\"react\"));var createMemoryHistory_1=require(\"./createMemoryHistory\");var getPathFromState_1=require(\"./getPathFromState\");var serverLocationContext_1=require(\"../global-state/serverLocationContext\");var storeContext_1=require(\"../global-state/storeContext\");var _findMatchingState=function findMatchingState(a,b){if(a===undefined||b===undefined||a.key!==b.key){return[undefined,undefined];}var aHistoryLength=a.history?a.history.length:a.routes.length;var bHistoryLength=b.history?b.history.length:b.routes.length;var aRoute=a.routes[a.index];var bRoute=b.routes[b.index];var aChildState=aRoute.state;var bChildState=bRoute.state;if(aHistoryLength!==bHistoryLength||aRoute.key!==bRoute.key||aChildState===undefined||bChildState===undefined||aChildState.key!==bChildState.key){return[a,b];}return _findMatchingState(aChildState,bChildState);};var series=function series(cb){var queue=Promise.resolve();var callback=function callback(){queue=queue.then(cb);};return callback;};exports.series=series;var linkingHandlers=[];function useLinking(ref,_ref,onUnhandledLinking){var _ref$enabled=_ref.enabled,enabled=_ref$enabled===void 0?true:_ref$enabled,config=_ref.config,_ref$getStateFromPath=_ref.getStateFromPath,getStateFromPath=_ref$getStateFromPath===void 0?native_1.getStateFromPath:_ref$getStateFromPath,_ref$getPathFromState=_ref.getPathFromState,getPathFromState=_ref$getPathFromState===void 0?native_1.getPathFromState:_ref$getPathFromState,_ref$getActionFromSta=_ref.getActionFromState,getActionFromState=_ref$getActionFromSta===void 0?native_1.getActionFromState:_ref$getActionFromSta;var independent=(0,native_1.useNavigationIndependentTree)();var store=(0,storeContext_1.useExpoRouterStore)();React.useEffect(function(){if(\"production\"==='production'){return undefined;}if(independent){return undefined;}if(enabled!==false&&linkingHandlers.length){console.error(['Looks like you have configured linking in multiple places. This is likely an error since deep links should only be handled in one place to avoid conflicts. Make sure that:',\"- You don't have multiple NavigationContainers in the app each with 'linking' enabled\",'- Only a single instance of the root component is rendered'].join('\\n').trim());}var handler=Symbol();if(enabled!==false){linkingHandlers.push(handler);}return function(){var index=linkingHandlers.indexOf(handler);if(index>-1){linkingHandlers.splice(index,1);}};},[enabled,independent]);var _React$useState=React.useState(createMemoryHistory_1.createMemoryHistory),_React$useState2=_slicedToArray(_React$useState,1),history=_React$useState2[0];var enabledRef=React.useRef(enabled);var configRef=React.useRef(config);var getStateFromPathRef=React.useRef(getStateFromPath);var getPathFromStateRef=React.useRef(getPathFromState);var getActionFromStateRef=React.useRef(getActionFromState);React.useEffect(function(){enabledRef.current=enabled;configRef.current=config;getStateFromPathRef.current=getStateFromPath;getPathFromStateRef.current=getPathFromState;getActionFromStateRef.current=getActionFromState;});var validateRoutesNotExistInRootState=React.useCallback(function(state){var rootState=store.state;return state==null?void 0:state.routes.some(function(r){return!(rootState!=null&&rootState.routeNames.includes(r.name));});},[ref]);var server=React.use(serverLocationContext_1.ServerContext);var getInitialState=React.useCallback(function(){var value;if(enabledRef.current){var _server$location;var location=(_server$location=server==null?void 0:server.location)!=null?_server$location:typeof window!=='undefined'?window.location:undefined;var path=location?location.pathname+location.search:undefined;if(path){value=getStateFromPathRef.current(path,configRef.current);}onUnhandledLinking(path);}var thenable={then:function then(onfulfilled){return Promise.resolve(onfulfilled?onfulfilled(value):value);},catch:function _catch(){return thenable;}};return thenable;},[]);var previousIndexRef=React.useRef(undefined);var previousStateRef=React.useRef(undefined);var pendingPopStatePathRef=React.useRef(undefined);React.useEffect(function(){previousIndexRef.current=history.index;return history.listen(function(){var _previousIndexRef$cur;var navigation=ref.current;if(!navigation||!enabled){return;}var _window=window,location=_window.location;var path=location.pathname+location.search+location.hash;var index=history.index;var previousIndex=(_previousIndexRef$cur=previousIndexRef.current)!=null?_previousIndexRef$cur:0;previousIndexRef.current=index;pendingPopStatePathRef.current=path;var record=history.get(index);if((record==null?void 0:record.path)===path&&record!=null&&record.state){navigation.resetRoot(record.state);return;}var state=getStateFromPathRef.current(path,configRef.current);if(state){onUnhandledLinking(path);if(validateRoutesNotExistInRootState(state)){return;}if(index>previousIndex||(index===previousIndex&&(!record||`${record==null?void 0:record.path}${location.hash}`===path))){var action=getActionFromStateRef.current(state,configRef.current);if(action!==undefined){try{navigation.dispatch(action);}catch(e){console.warn(`An error occurred when trying to handle the link '${path}': ${typeof e==='object'&&e!=null&&'message'in e?e.message:e}`);}}else{navigation.resetRoot(state);}}else{navigation.resetRoot(state);}}else{navigation.resetRoot(state);}});},[enabled,history,onUnhandledLinking,ref,validateRoutesNotExistInRootState]);React.useEffect(function(){var _ref$current;if(!enabled){return;}var getPathForRoute=function getPathForRoute(route,state){var path;if(route!=null&&route.path){var stateForPath=getStateFromPathRef.current(route.path,configRef.current);if(stateForPath){var focusedRoute=(0,native_1.findFocusedRoute)(stateForPath);if(focusedRoute&&focusedRoute.name===route.name&&(0,fast_deep_equal_1.default)(_objectSpread({},focusedRoute.params),_objectSpread({},route.params))){path=(0,getPathFromState_1.appendBaseUrl)(route.path);}}}if(path==null){path=getPathFromStateRef.current(state,configRef.current);}return path;};if(ref.current){var rootState=ref.current.getRootState();var state=store.state;if(state){var route=(0,native_1.findFocusedRoute)(state);var path=getPathForRoute(route,state);if(previousStateRef.current===undefined){previousStateRef.current=rootState;}history.replace({path:path,state:state});}}var onStateChange=function(){var _ref2=_asyncToGenerator(function*(){var navigation=ref.current;if(!navigation||!enabled){return;}var previousState=previousStateRef.current;var rootState=navigation.getRootState();var state=store.state;if(!state){return;}var pendingPath=pendingPopStatePathRef.current;var route=(0,native_1.findFocusedRoute)(state);var path=getPathForRoute(route,state);previousStateRef.current=rootState;pendingPopStatePathRef.current=undefined;var _findMatchingState2=_findMatchingState(previousState,state),_findMatchingState3=_slicedToArray(_findMatchingState2,2),previousFocusedState=_findMatchingState3[0],focusedState=_findMatchingState3[1];if(previousFocusedState&&focusedState&&path!==pendingPath){var historyDelta=(focusedState.history?focusedState.history.length:focusedState.routes.length)-(previousFocusedState.history?previousFocusedState.history.length:previousFocusedState.routes.length);if(historyDelta>0){history.push({path:path,state:state});}else if(historyDelta<0){var nextIndex=history.backIndex({path:path});var currentIndex=history.index;try{if(nextIndex!==-1&&nextIndex<currentIndex&&history.get(nextIndex-currentIndex)){yield history.go(nextIndex-currentIndex);}else{yield history.go(historyDelta);}history.replace({path:path,state:state});}catch(_unused){}}else{history.replace({path:path,state:state});}}else{history.replace({path:path,state:state});}});return function onStateChange(){return _ref2.apply(this,arguments);};}();return(_ref$current=ref.current)==null?void 0:_ref$current.addListener('state',(0,exports.series)(onStateChange));},[enabled,history,ref]);return{getInitialState:getInitialState};}function getInitialURLWithTimeout(){return typeof window==='undefined'?'':window.location.href;}","map":{"version":3,"names":["exports","useLinking","getInitialURLWithTimeout","native_1","require","fast_deep_equal_1","__importDefault","React","__importStar","createMemoryHistory_1","getPathFromState_1","serverLocationContext_1","storeContext_1","findMatchingState","a","b","undefined","key","aHistoryLength","history","length","routes","bHistoryLength","aRoute","index","bRoute","aChildState","state","bChildState","series","cb","queue","Promise","resolve","callback","then","linkingHandlers","ref","_ref","onUnhandledLinking","_ref$enabled","enabled","config","_ref$getStateFromPath","getStateFromPath","_ref$getPathFromState","getPathFromState","_ref$getActionFromSta","getActionFromState","independent","useNavigationIndependentTree","store","useExpoRouterStore","useEffect","console","error","join","trim","handler","Symbol","push","indexOf","splice","_React$useState","useState","createMemoryHistory","_React$useState2","_slicedToArray","enabledRef","useRef","configRef","getStateFromPathRef","getPathFromStateRef","getActionFromStateRef","current","validateRoutesNotExistInRootState","useCallback","rootState","some","r","routeNames","includes","name","server","use","ServerContext","getInitialState","value","_server$location","location","window","path","pathname","search","thenable","onfulfilled","catch","previousIndexRef","previousStateRef","pendingPopStatePathRef","listen","_previousIndexRef$cur","navigation","_window","hash","previousIndex","record","get","resetRoot","action","dispatch","e","warn","message","_ref$current","getPathForRoute","route","stateForPath","focusedRoute","findFocusedRoute","default","_objectSpread","params","appendBaseUrl","getRootState","replace","onStateChange","_ref2","_asyncToGenerator","previousState","pendingPath","_findMatchingState2","_findMatchingState3","previousFocusedState","focusedState","historyDelta","nextIndex","backIndex","currentIndex","go","_unused","apply","arguments","addListener","href"],"sources":["C:\\Users\\ericz\\exprog\\PI_mobile\\node_modules\\expo-router\\src\\fork\\useLinking.ts"],"sourcesContent":["import {\n  LinkingOptions,\n  findFocusedRoute,\n  getActionFromState as getActionFromStateDefault,\n  getPathFromState as getPathFromStateDefault,\n  getStateFromPath as getStateFromPathDefault,\n  type NavigationContainerRef,\n  type NavigationState,\n  type ParamListBase,\n  useNavigationIndependentTree,\n} from '@react-navigation/native';\nimport isEqual from 'fast-deep-equal';\nimport * as React from 'react';\n\nimport { createMemoryHistory } from './createMemoryHistory';\nimport { appendBaseUrl } from './getPathFromState';\nimport { ServerContext } from '../global-state/serverLocationContext';\nimport { useExpoRouterStore } from '../global-state/storeContext';\n\ntype ResultState = ReturnType<typeof getStateFromPathDefault>;\n\n/**\n * Find the matching navigation state that changed between 2 navigation states\n * e.g.: a -> b -> c -> d and a -> b -> c -> e -> f, if history in b changed, b is the matching state\n */\nconst findMatchingState = <T extends NavigationState>(\n  a: T | undefined,\n  b: T | undefined\n): [T | undefined, T | undefined] => {\n  if (a === undefined || b === undefined || a.key !== b.key) {\n    return [undefined, undefined];\n  }\n\n  // Tab and drawer will have `history` property, but stack will have history in `routes`\n  const aHistoryLength = a.history ? a.history.length : a.routes.length;\n  const bHistoryLength = b.history ? b.history.length : b.routes.length;\n\n  const aRoute = a.routes[a.index];\n  const bRoute = b.routes[b.index];\n\n  const aChildState = aRoute.state as T | undefined;\n  const bChildState = bRoute.state as T | undefined;\n\n  // Stop here if this is the state object that changed:\n  // - history length is different\n  // - focused routes are different\n  // - one of them doesn't have child state\n  // - child state keys are different\n  if (\n    aHistoryLength !== bHistoryLength ||\n    aRoute.key !== bRoute.key ||\n    aChildState === undefined ||\n    bChildState === undefined ||\n    aChildState.key !== bChildState.key\n  ) {\n    return [a, b];\n  }\n\n  return findMatchingState(aChildState, bChildState);\n};\n\n/**\n * Run async function in series as it's called.\n */\nexport const series = (cb: () => Promise<void>) => {\n  let queue = Promise.resolve();\n  const callback = () => {\n    queue = queue.then(cb);\n  };\n  return callback;\n};\n\nconst linkingHandlers: symbol[] = [];\n\ntype Options = LinkingOptions<ParamListBase>;\n\nexport function useLinking(\n  ref: React.RefObject<NavigationContainerRef<ParamListBase> | null>,\n  {\n    enabled = true,\n    config,\n    getStateFromPath = getStateFromPathDefault,\n    getPathFromState = getPathFromStateDefault,\n    getActionFromState = getActionFromStateDefault,\n  }: Options,\n  onUnhandledLinking: (lastUnhandledLining: string | undefined) => void\n) {\n  const independent = useNavigationIndependentTree();\n\n  const store = useExpoRouterStore();\n\n  React.useEffect(() => {\n    if (process.env.NODE_ENV === 'production') {\n      return undefined;\n    }\n\n    if (independent) {\n      return undefined;\n    }\n\n    if (enabled !== false && linkingHandlers.length) {\n      console.error(\n        [\n          'Looks like you have configured linking in multiple places. This is likely an error since deep links should only be handled in one place to avoid conflicts. Make sure that:',\n          \"- You don't have multiple NavigationContainers in the app each with 'linking' enabled\",\n          '- Only a single instance of the root component is rendered',\n        ]\n          .join('\\n')\n          .trim()\n      );\n    }\n\n    const handler = Symbol();\n\n    if (enabled !== false) {\n      linkingHandlers.push(handler);\n    }\n\n    return () => {\n      const index = linkingHandlers.indexOf(handler);\n\n      if (index > -1) {\n        linkingHandlers.splice(index, 1);\n      }\n    };\n  }, [enabled, independent]);\n\n  const [history] = React.useState(createMemoryHistory);\n\n  // We store these options in ref to avoid re-creating getInitialState and re-subscribing listeners\n  // This lets user avoid wrapping the items in `React.useCallback` or `React.useMemo`\n  // Not re-creating `getInitialState` is important coz it makes it easier for the user to use in an effect\n  const enabledRef = React.useRef(enabled);\n  const configRef = React.useRef(config);\n  const getStateFromPathRef = React.useRef(getStateFromPath);\n  const getPathFromStateRef = React.useRef(getPathFromState);\n  const getActionFromStateRef = React.useRef(getActionFromState);\n\n  React.useEffect(() => {\n    enabledRef.current = enabled;\n    configRef.current = config;\n    getStateFromPathRef.current = getStateFromPath;\n    getPathFromStateRef.current = getPathFromState;\n    getActionFromStateRef.current = getActionFromState;\n  });\n\n  const validateRoutesNotExistInRootState = React.useCallback(\n    (state: ResultState) => {\n      // START FORK\n      // Instead of using the rootState (which might be stale) we should use the focused state\n      // const navigation = ref.current;\n      // const rootState = navigation?.getRootState();\n      const rootState = store.state as NavigationState;\n\n      // END FORK\n\n      // Make sure that the routes in the state exist in the root navigator\n      // Otherwise there's an error in the linking configuration\n      return state?.routes.some((r) => !rootState?.routeNames.includes(r.name));\n    },\n    [ref]\n  );\n\n  const server = React.use(ServerContext);\n\n  const getInitialState = React.useCallback(() => {\n    let value: ResultState | undefined;\n\n    if (enabledRef.current) {\n      const location =\n        server?.location ?? (typeof window !== 'undefined' ? window.location : undefined);\n\n      const path = location ? location.pathname + location.search : undefined;\n\n      if (path) {\n        value = getStateFromPathRef.current(path, configRef.current);\n      }\n\n      // If the link were handled, it gets cleared in NavigationContainer\n      onUnhandledLinking(path);\n    }\n\n    const thenable = {\n      then(onfulfilled?: (state: ResultState | undefined) => void) {\n        return Promise.resolve(onfulfilled ? onfulfilled(value) : value);\n      },\n      catch() {\n        return thenable;\n      },\n    };\n\n    return thenable as PromiseLike<ResultState | undefined>;\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const previousIndexRef = React.useRef<number | undefined>(undefined);\n  const previousStateRef = React.useRef<NavigationState | undefined>(undefined);\n  const pendingPopStatePathRef = React.useRef<string | undefined>(undefined);\n\n  React.useEffect(() => {\n    previousIndexRef.current = history.index;\n\n    return history.listen(() => {\n      const navigation = ref.current;\n\n      if (!navigation || !enabled) {\n        return;\n      }\n\n      const { location } = window;\n\n      const path = location.pathname + location.search + location.hash;\n      const index = history.index;\n\n      const previousIndex = previousIndexRef.current ?? 0;\n\n      previousIndexRef.current = index;\n      pendingPopStatePathRef.current = path;\n\n      // When browser back/forward is clicked, we first need to check if state object for this index exists\n      // If it does we'll reset to that state object\n      // Otherwise, we'll handle it like a regular deep link\n      const record = history.get(index);\n\n      if (record?.path === path && record?.state) {\n        navigation.resetRoot(record.state);\n        return;\n      }\n\n      const state = getStateFromPathRef.current(path, configRef.current);\n\n      // We should only dispatch an action when going forward\n      // Otherwise the action will likely add items to history, which would mess things up\n      if (state) {\n        // If the link were handled, it gets cleared in NavigationContainer\n        onUnhandledLinking(path);\n        // Make sure that the routes in the state exist in the root navigator\n        // Otherwise there's an error in the linking configuration\n        if (validateRoutesNotExistInRootState(state)) {\n          return;\n        }\n\n        if (\n          index > previousIndex ||\n          /* START FORK\n           *\n           * This is a workaround for React Navigation's handling of hashes (it doesn't handle them)\n           * When you click on <a href=\"#hash\">, the browser will first fire a popstate event\n           * and this callback will be called.\n           *\n           * From React Navigation's perspective, it's treating the new hash change like a back/forward\n           * button press, so it thinks it should reset the state. When we should\n           * be to be pushing the new state\n           *\n           * Our fix is to check if the index is the same as the previous index\n           * and if the incoming path is the same as the old path but with the hash added,\n           * then treat it as a push instead of a reset\n           *\n           * This also works for subsequent hash changes, as internally RN\n           * doesn't store the hash in the history state.\n           *\n           * @see https://developer.mozilla.org/en-US/docs/Web/API/Window/popstate_event#when_popstate_is_sent\n           */\n          (index === previousIndex && (!record || `${record?.path}${location.hash}` === path))\n          // END FORK\n        ) {\n          const action = getActionFromStateRef.current(state, configRef.current);\n\n          if (action !== undefined) {\n            try {\n              navigation.dispatch(action);\n            } catch (e) {\n              // Ignore any errors from deep linking.\n              // This could happen in case of malformed links, navigation object not being initialized etc.\n              console.warn(\n                `An error occurred when trying to handle the link '${path}': ${\n                  typeof e === 'object' && e != null && 'message' in e ? e.message : e\n                }`\n              );\n            }\n          } else {\n            navigation.resetRoot(state);\n          }\n        } else {\n          navigation.resetRoot(state);\n        }\n      } else {\n        // if current path didn't return any state, we should revert to initial state\n        navigation.resetRoot(state);\n      }\n    });\n  }, [enabled, history, onUnhandledLinking, ref, validateRoutesNotExistInRootState]);\n\n  React.useEffect(() => {\n    if (!enabled) {\n      return;\n    }\n\n    const getPathForRoute = (\n      route: ReturnType<typeof findFocusedRoute>,\n      state: NavigationState\n    ): string => {\n      let path;\n\n      // If the `route` object contains a `path`, use that path as long as `route.name` and `params` still match\n      // This makes sure that we preserve the original URL for wildcard routes\n      if (route?.path) {\n        const stateForPath = getStateFromPathRef.current(route.path, configRef.current);\n\n        if (stateForPath) {\n          const focusedRoute = findFocusedRoute(stateForPath);\n\n          if (\n            focusedRoute &&\n            focusedRoute.name === route.name &&\n            isEqual({ ...focusedRoute.params }, { ...route.params })\n          ) {\n            // START FORK - Ensure paths coming from events (e.g refresh) have the base URL\n            // path = route.path;\n            path = appendBaseUrl(route.path);\n            // END FORK\n          }\n        }\n      }\n\n      if (path == null) {\n        path = getPathFromStateRef.current(state, configRef.current);\n      }\n\n      // START FORK - ExpoRouter manually handles hashes. This code is intentionally removed\n      // const previousRoute = previousStateRef.current\n      //   ? findFocusedRoute(previousStateRef.current)\n      //   : undefined;\n\n      // Preserve the hash if the route didn't change\n      // if (\n      //   previousRoute &&\n      //   route &&\n      //   'key' in previousRoute &&\n      //   'key' in route &&\n      //   previousRoute.key === route.key\n      // ) {\n      //   path = path + location.hash;\n      // }\n      // END FORK\n\n      return path;\n    };\n\n    if (ref.current) {\n      // We need to record the current metadata on the first render if they aren't set\n      // This will allow the initial state to be in the history entry\n\n      // START FORK\n      // Instead of using the rootState (which might be stale) we should use the focused state\n      // const state = ref.current.getRootState();\n      const rootState = ref.current.getRootState();\n      const state = store.state as NavigationState;\n\n      // END FORK\n\n      if (state) {\n        const route = findFocusedRoute(state);\n        const path = getPathForRoute(route, state);\n\n        if (previousStateRef.current === undefined) {\n          // START FORK\n          // previousStateRef.current = state;\n          previousStateRef.current = rootState;\n          // END FORK\n        }\n\n        history.replace({ path, state });\n      }\n    }\n\n    const onStateChange = async () => {\n      const navigation = ref.current;\n\n      if (!navigation || !enabled) {\n        return;\n      }\n\n      const previousState = previousStateRef.current;\n      // START FORK\n      // Instead of using the rootState (which might be stale) we should use the focused state\n      // const state = navigation.getRootState();\n      const rootState = navigation.getRootState();\n      const state = store.state as NavigationState;\n\n      // END FORK\n\n      // root state may not available, for example when root navigators switch inside the container\n      if (!state) {\n        return;\n      }\n\n      const pendingPath = pendingPopStatePathRef.current;\n      const route = findFocusedRoute(state);\n      const path = getPathForRoute(route, state);\n\n      // START FORK\n      // previousStateRef.current = state;\n      previousStateRef.current = rootState;\n      // END FORK\n      pendingPopStatePathRef.current = undefined;\n\n      // To detect the kind of state change, we need to:\n      // - Find the common focused navigation state in previous and current state\n      // - If only the route keys changed, compare history/routes.length to check if we go back/forward/replace\n      // - If no common focused navigation state found, it's a replace\n      const [previousFocusedState, focusedState] = findMatchingState(previousState, state);\n\n      if (\n        previousFocusedState &&\n        focusedState &&\n        // We should only handle push/pop if path changed from what was in last `popstate`\n        // Otherwise it's likely a change triggered by `popstate`\n        path !== pendingPath\n      ) {\n        const historyDelta =\n          (focusedState.history ? focusedState.history.length : focusedState.routes.length) -\n          (previousFocusedState.history\n            ? previousFocusedState.history.length\n            : previousFocusedState.routes.length);\n\n        if (historyDelta > 0) {\n          // If history length is increased, we should pushState\n          // Note that path might not actually change here, for example, drawer open should pushState\n          history.push({ path, state });\n        } else if (historyDelta < 0) {\n          // If history length is decreased, i.e. entries were removed, we want to go back\n\n          const nextIndex = history.backIndex({ path });\n          const currentIndex = history.index;\n\n          try {\n            if (\n              nextIndex !== -1 &&\n              nextIndex < currentIndex &&\n              // We should only go back if the entry exists and it's less than current index\n              history.get(nextIndex - currentIndex)\n            ) {\n              // An existing entry for this path exists and it's less than current index, go back to that\n              await history.go(nextIndex - currentIndex);\n            } else {\n              // We couldn't find an existing entry to go back to, so we'll go back by the delta\n              // This won't be correct if multiple routes were pushed in one go before\n              // Usually this shouldn't happen and this is a fallback for that\n              await history.go(historyDelta);\n            }\n\n            // Store the updated state as well as fix the path if incorrect\n            history.replace({ path, state });\n          } catch {\n            // The navigation was interrupted\n          }\n        } else {\n          // If history length is unchanged, we want to replaceState\n          history.replace({ path, state });\n        }\n      } else {\n        // If no common navigation state was found, assume it's a replace\n        // This would happen if the user did a reset/conditionally changed navigators\n        history.replace({ path, state });\n      }\n    };\n\n    // We debounce onStateChange coz we don't want multiple state changes to be handled at one time\n    // This could happen since `history.go(n)` is asynchronous\n    // If `pushState` or `replaceState` were called before `history.go(n)` completes, it'll mess stuff up\n    return ref.current?.addListener('state', series(onStateChange));\n  }, [enabled, history, ref]);\n\n  return {\n    getInitialState,\n  };\n}\n\nexport function getInitialURLWithTimeout(): string | null | Promise<string | null> {\n  return typeof window === 'undefined' ? '' : window.location.href;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}